---
version: 2.1

orbs:
  prometheus: prometheus/prometheus@0.4.0

executors:
  golang:
    docker:
    - image: circleci/golang:1.13

jobs:
  test:
    executor: golang
    steps:
      - prometheus/setup_environment
      - run: make build
      - run: wget https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz
      - run: tar xzf node_exporter-0.18.1.linux-amd64.tar.gz
      - run: cp -v node_exporter-0.18.1.linux-amd64/node_exporter ./node_exporter
      - run: wget https://github.com/prometheus/prometheus/releases/download/v2.15.2/prometheus-2.15.2.linux-amd64.tar.gz
      - run: tar xzf prometheus-2.15.2.linux-amd64.tar.gz
      - run: cp -v prometheus-2.15.2.linux-amd64/prometheus ./prometheus
      - run:
          name: Configure Prometheus
          command: |
              cat \<< EOF > prometheus.yml
              global:
                scrape_interval: 1s
              scrape_configs:
                - job_name: pushprox
                  proxy_url: http://127.0.0.1:8080
                  static_configs:
                    - targets: ['$(hostname):9100']
              EOF
      - run:
          name: Run everything and test that Prometheus can scrape node_exporter via pushprox
          command: ./end-to-end-test.sh

  publish_release:
    executor: golang

    steps:
    - prometheus/setup_build_environment
    - run: promu crossbuild tarballs
    - run: promu checksum .tarballs
    - run: promu release .tarballs
    - store_artifacts:
        path: .tarballs
        destination: releases

workflows:
  version: 2
  stuff:
    jobs:
    - test:
        filters:
          tags:
            only: /.*/
    - prometheus/build:
        name: build
        filters:
          tags:
            only: /.*/
    - publish_release:
        context: org-context
        requires:
        - test
        - build
        filters:
          tags:
            only: /^v.*/
          branches:
            ignore: /.*/
